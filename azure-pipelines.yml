  
jobs:
- job: PyVSC_Linux
  pool:
   vmImage: 'ubuntu-18.04'

  variables:
  - name: build_num
    value: $(Build.BuildNumber)
  steps:
  - script: |
      python -m pip install wheel twine ivpm
    displayName: 'Install wheel+twine'

  - script: |
      python setup.py bdist_wheel --universal
    displayName: 'Build Wheel'
#  - task: TwineAuthenticate@1
#    condition: eq(variables['Build.SourceBranchName'], 'master')
#    inputs:
#      pythonUploadServiceConnection: pypi-pyvsc
#  - script: |
#      # Only deploy from master
#      if test "$(Build.SourceBranchName)" = "master"; then
#          python -m twine --version
#          echo "Calling twine"
#          python -m twine upload -r pybfms --config-file $(PYPIRC_PATH) result/wheelhouse/* result/dist/*.tar.gz
#          echo "Calling twine complete"
#      fi
#    displayName: 'Upload to PyPi'


