  
jobs:
- job: PyVSC_Linux
  pool:
   vmImage: 'ubuntu-18.04'

  variables:
  - name: build_num
    value: $(Build.BuildNumber)
  steps:
  - script: |
      python -m pip install --upgrade pip wheel twine ivpm pylint pyboolector
      python -m pip install pytest pytest-cov
    displayName: 'Install Python packages'
    
   - script: |
     export PYTHONPATH=$(Build.Repository.LocalPath)/src
     pytest ve/unit --doctest-modules --junitxml=junit/test-results.xml
   displayName: 'Run Unit Tests'
   
   - task: PublishTestResults@2
     condition: succeededOrFailed()
     inputs:
       testResultsFiles: '**/test-*.xml'
       testRunTitle: 'Publish test results'

#  - script: |
#      python scripts/run_pylint.py
#    displayName: 'Run PyLint'

  - script: |
      python setup.py bdist_wheel --universal
    displayName: 'Build Wheel'

  - task: TwineAuthenticate@1
    condition: eq(variables['Build.SourceBranchName'], 'master')
    inputs:
      pythonUploadServiceConnection: pypi-pyvsc
#  - script: |
#      # Only deploy from master
#      if test "$(Build.SourceBranchName)" = "master"; then
#          python -m twine --version
#          echo "Calling twine"
#          python -m twine upload -r py-vsc --config-file $(PYPIRC_PATH) dist/*.whl
#          echo "Calling twine complete"
#      fi
#    displayName: 'Upload to PyPi'


